<!DOCTYPE html>
<html lang="en">
    
    <%- include ../partials/head %>
  <body>

    <%- include ../partials/header %>


    <div class="container">
        <div class='row m-4'>
            <div class='col-md-12 '>
                <center><h1>Developer's Guide - Api</h1></center>
                <h3>Overview</h3>
                <p>

                    OpenTrade provides a simple and powerful REST API to allow you to programatically perform nearly all actions you can from our web interface.  All requests use the <code>application/json</code>
                    content type and go over <code>https</code>.  The base url is <code>https://trade.multicoins.org/api/{version}/</code>.  All requests are GET requests and all responses come in a default response object with
                    the result in the result field.  Always check the <code>success</code> flag to ensure that your API call succeeded.<br>
                    <br>
                    We are currently restricting orders to 500 open orders and 200,000 orders a day.  We reserve the right to change these settings as we tune the system.
                    <br><br>
                    If you have any questions, feedback or recommendation for API support you can post a question in our support center.
                            
                </p>
                <hr>
                <h3>Getting Started</h3>
                <ul>
                    <li>General</li>
                    <li>Authentication</li>
                    <li>API Reference</li>
                    <li>Client Libraries</li>
                </ul>  
                <hr>
                <h3>General</h3>
                We provide a simple RESTful API. All calls are GETs and should be called via <code>https</code>. We will support n-1 versions of the API. Our current stable API is v1. The endpoints have a standard format as follows:
                <br><br>
                <pre>https://trade.multicoins.org/api/{version}/{method}?param=value</pre>
                <hr>
                <h3>Authentication</h3>
                In the spirit of keeping things simple, we offer an easy to manage API Key authentication method. 
                You can have multiple API keys, each with their own level of rights. To manage your API keys please goto 
                Settings->Manage API Keys. API Rights <br><br>
                <ul>
                    <li>Read Info - You can only view the balances, orders, and other details of the account</li>
                    <li>Trade Limit - This allows the API key to place LIMIT buy and sell orders</li>
                    <li>Withdraw - We allow you to programatically withdraw any currency to an address you provide. This can be used to quick arbitrage exchanges or move money into cold storage after thresholds.</li>
                </ul> 
                For this version, we use a standard HMAC-SHA512 signing. Append <code>apikey</code> and <code>nonce</code> to your request and calculate 
                the HMAC hash and include it under an <code>apisign</code> header. 
                Note: the nonce is not respected right now but will be enforced later.
                <br><br>
<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#PHP_Example1" aria-expanded="false" aria-controls="PHP_Example1">
    PHP example
</button>   
<div class="collapse" id="PHP_Example1">
    <div class="card card-body">
                <pre>
&lt?php

$request = '/account/getbalance';
$currency = 'MC';

$apikey='__API_KEY__';
$apisecret='__API_SECRET__';
$nonce=time();

$uri='https://trade.multicoins.org/api/v1'.$request .'?apikey='.$apikey.'&ampnonce='.$nonce.'&ampmarket='.$market.'&ampcurrency='.$currency;
$sign=hash_hmac('sha512',$uri,$apisecret);
$ch = curl_init($uri);
curl_setopt($ch, CURLOPT_HTTPHEADER, array('apisign:'.$sign));
$execResult = curl_exec($ch);
$obj = json_decode($execResult);   
?&gt                    
                </pre>
        
    </div>
</div>
                <br><br>
<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example1" aria-expanded="false" aria-controls="Node_Example1">
    node.js example
</button>   
<div class="collapse" id="Node_Example1">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

GetOpenOrders('MC-DOGE', data => { console.log(JSON.stringify(data.result || data)); });

function GetOpenOrders(market, callback)
{
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/market/getopenorders?apikey='+API_PUB_KEY+'&ampnonce='+nonce+'&ampmarket='+market;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }
    };
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); }); }).end();
};
                </pre>
        
    </div>
</div>
                <hr>
                <h3>API Reference</h3>
                Our APIs are broken into distinct groups
                <ul>
                    <li>Public - Public information available without an API key</li>
                    <li>Market - For programatic trading of crypto currencies</li>
                    <li>Account - For managing your account</li>
                </ul> 
                <hr>
                <h4>Public Api</h4>
                <div class="api-doc">
                    <h5>/public/getmarkets</h5>
                    <p>Used to get the open and available trading markets at OpenTrade along with other meta data. </p>
                    Parameters 
                    <p>None</p>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/public/getmarkets</pre>
                    Response:
                    <pre>
    {
	"success" : true,
	"message" : "",
	"result" : [{
			"MarketCurrency" : "LTC",
			"BaseCurrency" : "MC",
			"MarketCurrencyLong" : "Litecoin",
			"BaseCurrencyLong" : "Marycoin",
			"MinTradeSize" : "0",
			"MarketName" : "MC-LTC",
			"IsActive" : true,
			"Created" : "2014-02-13T00:00:00"
		}, {
			"MarketCurrency" : "DOGE",
			"BaseCurrency" : "MC",
			"MarketCurrencyLong" : "Dogecoin",
			"BaseCurrencyLong" : "Marycoin",
			"MinTradeSize" : "0",
			"MarketName" : "MC-DOGE",
			"IsActive" : true,
			"Created" : "2014-02-13T00:00:00"
		}
        ]
    }

                    </pre>
                    
                    <h5>/public/getorderbook</h5>
                    <p>Used to get retrieve the orderbook for a given market </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>market</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ex: MC-LTC)</td>
                        </tr>
                        <tr>
                            <td><code>type</code></td>
                            <td>optional</td>
                            <td>buy, sell or both to identify the type of orderbook to return. By default <code>type='both'</code></td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/public/getorderbook?market=MC-LTC&amp;type=both </pre>
                    Response:
                    <pre>    {
	"success" : true,
	"message" : "",
	"result" : {
		"buy" : [{
				"Quantity" : 12.37000000,
				"Rate" : 0.02525000
			}
		],
		"sell" : [{
				"Quantity" : 32.55412402,
				"Rate" : 0.02540000
			}, {
				"Quantity" : 60.00000000,
				"Rate" : 0.02550000
			}, {
				"Quantity" : 60.00000000,
				"Rate" : 0.02575000
			}, {
				"Quantity" : 84.00000000,
				"Rate" : 0.02600000
			}
		]
	}
    }

                    </pre>
                    <br>
                    
                    <h5>/public/getlastmarketdata</h5>
                    <p>Used to get the last summary of all coins </p>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/public/getlastmarketdata</pre>
                    Response:
                    <pre>
{
"success":true,
"message":"",
"result":{
    "coins":[
    {"id":1,"name":"Marycoin","ticker":"MC","icon":"https%3A//trade.multicoins.org/mc8.png","info":{"active":true,"minconf":3,"hold":0.002,"page":"1","withdraw":"Enabled","orders":"Enabled"},"volume":0,"price":0,"fromBuyerToSeller":0,"buysell":"buy","prev_price":0,"prev_frombuyertoseller":0,"prev_buysell":"buy"},
    {"id":2,"name":"Bitcoin","ticker":"BTC","icon":"https%3A//raw.githubusercontent.com/bitcoin/bitcoin/master/src/qt/res/icons/bitcoin.png","info":{"active":true,"minconf":3,"hold":0.0002,"page":"https://bitcointalk.org/index.php?topic=5.0","withdraw":"Enabled","orders":"Enabled"},"volume":"0.000014000000","price":"1441881.0","fromBuyerToSeller":"20.186334","buysell":"buy","prev_price":"1437854.0","prev_frombuyertoseller":1437854,"prev_buysell":"buy"},
    {"id":3,"name":"Dogecoin","ticker":"DOGE","icon":"https%3A//raw.githubusercontent.com/dogecoin/dogecoin/master/src/qt/res/icons/bitcoin.png","info":{"minconf":3,"hold":2,"active":true,"page":"https://bitcointalk.org/index.php?topic=361813.0"},"volume":"8.8580000","price":"0.71999990","fromBuyerToSeller":"6.3777591","buysell":"sell","prev_price":"0.71999990","prev_frombuyertoseller":0.7199999034455098,"prev_buysell":"sell"},
    ***]
    }
}                    
                    </pre>

                    <h5>/public/getmarketsummary</h5>
                    <p>Used to get the last 24 hour summary of one active exchange </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>market</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ex: MC-LTC)</td>
                        </tr>
                        <tr>
                            <td><code>period</code></td>
                            <td>optional</td>
                            <td>period in hours. Can be: 24, 250, 1000 or 6000. By default period=24</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/public/getmarketsummary?market=MC-LTC&amp;period=250</pre>
                    Response:
                    <pre>
    {
	"success" : true,
	"message" : "",
	"result" : {
			"MarketName" : "MC-LTC",
			"High" : 0.01350000,
			"Low" : 0.01200000,
			"Volume" : 3833.97619253,
			"Last" : 0.01349998,
			"Bid" : 0.01271001,
			"Ask" : 0.01291100,
			"OpenBuyOrders" : 45,
			"OpenSellOrders" : 45
		}
    }
                    </pre>

                    <h5>/public/getmarkets24</h5>
                    <p>Used to get the last 24 hour summary of all active exchanges </p>
                    Parameters 
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/public/getmarkets24</pre>
                    Response:
                    <pre>
    {
    "success":true,
    "message":"",
    "result":{
        "TotalMarkets":22,
        "v24":30545.55264574,
        "data":{
            "YTN":{"MarketName":"MC-YTN","High":"1.10000000","Low":"1.10000000","Volume":"21.74889000","Last":"1.1000000","Bid":"1.10000000","Ask":"1.99990000","OpenBuyOrders":5,"OpenSellOrders":15,"coin_icon_src":"https%3A//raw.githubusercontent.com/conan-equal-newone/yenten/master/src/qt/res/icons/bitcoin.png","coin_info":{"minconf":6,"hold":0.002,"active":true,"page":"https://bitcointalk.org/index.php?topic=2329470.0"}},
            "WAVI":{"MarketName":"MC-WAVI","High":"1.01000000","Low":"0.49999999","Volume":"890.04802700","Last":"1.0100000","Bid":"0.31000001","Ask":"1.01000000","OpenBuyOrders":8,"OpenSellOrders":104,"coin_icon_src":"https%3A//raw.githubusercontent.com/wavidev-the-man/wavi/master/src/qt/res/icons/bitcoin.png","coin_info":{"minconf":3,"hold":0.002,"active":true,"page":"https://bitcointalk.org/index.php?topic=3146751.0"}},
            ...
            }
        }
    }
                    </pre>
                    

                    <h5>/public/getmarkethistory</h5>
                    <p>Used to retrieve the latest trades that have occured for a specific market. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>market</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ex: MC-LTC)</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/public/getmarkethistory?market=MC-LTC</pre>
                    Response:
                    <pre>
    {
	"success" : true,
	"message" : "",
	"result" : [{
			"Id" : 319435,
			"TimeStamp" : "2018-01-01T03:21:20.08",
			"Quantity" : 0.30802438,
			"Price" : 0.01263400,
			"Total" : 0.00389158,
			"FillType" : "FILL",
			"OrderType" : "BUY"
		}, {
			"Id" : 319433,
			"TimeStamp" : "2018-01-01T03:21:20.08",
			"Quantity" : 0.31820814,
			"Price" : 0.01262800,
			"Total" : 0.00401833,
			"FillType" : "FILL",
			"OrderType" : "BUY"
		}, {
			"Id" : 319379,
			"TimeStamp" : "2018-01-01T02:58:48.127",
			"Quantity" : 49.64643541,
			"Price" : 0.01263200,
			"Total" : 0.62713377,
			"FillType" : "FILL",
			"OrderType" : "SELL"
		}, {
			"Id" : 319378,
			"TimeStamp" : "2018-01-01T02:58:46.27",
			"Quantity" : 0.35356459,
			"Price" : 0.01263200,
			"Total" : 0.00446622,
			"FillType" : "FILL",
			"OrderType" : "SELL"
		}
	]
    }
                        
                    </pre>
                </div>
                <br>
                <h4>Market Apis</h4>
                <div class="api-doc">
                    <h5>/market/buylimit</h5>
                    <p>Used to place a buy order in a specific market. Use <code>buylimit</code> to place limit orders. Make sure you have the proper permissions set on your API keys for this call to work </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>market</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ex: BTC-LTC)</td>
                        </tr>
                        <tr>
                            <td><code>quantity</code></td>
                            <td>required</td>
                            <td>the amount to purchase</td>
                        </tr>
                        <tr>
                            <td><code>rate</code></td>
                            <td>required</td>
                            <td>the rate at which to place the order.</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/market/buylimit?apikey=API_KEY&amp;nonce=NONCE&amp;market=MC-LTC&amp;quantity=1.2&amp;rate=1.3</pre>
                    Response - Returns you the order uuid:
                    <pre>
    {
	"success" : true,
	"message" : "",
	"result" : {
		"uuid" : "e606d53c-8d70-11e3-94b5-425861b86ab6"
	}
    }                        
                    </pre>

<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example4" aria-expanded="false" aria-controls="Node_Example4">
    node.js example
</button>   
<div class="collapse" id="Node_Example4">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

BuyLimit('MC-BTC', 0.00001, 1135000, data => { console.log(JSON.stringify(data.result || data)); });

function BuyLimit(market, quantity, rate, callback)
{
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/market/buylimit?apikey='+API_PUB_KEY+'&ampnonce='+nonce+'&ampmarket='+market+'&ampquantity='+quantity+'&amprate='+rate;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }
    };
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); });
    }).end();
    
}
                </pre>
        
    </div>
</div>
<br><br>
                    <h5>/market/selllimit</h5>
                    <p>Used to place an sell order in a specific market. Use <code>selllimit</code> to place limit orders. Make sure you have the proper permissions set on your API keys for this call to work</p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>market</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ex: BTC-LTC)</td>
                        </tr>
                        <tr>
                            <td><code>quantity</code></td>
                            <td>required</td>
                            <td>the amount to purchase</td>
                        </tr>
                        <tr>
                            <td><code>rate</code></td>
                            <td>required</td>
                            <td>the rate at which to place the order.</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/market/selllimit?apikey=API_KEY&amp;nonce=NONCE&amp;market=MC-LTC&quantity=1.2&amp;rate=1.3</pre>
                    Response - Returns you the order uuid:
                    <pre>
    {
	"success" : true,
	"message" : "",
	"result" : {
		"uuid" : "614c34e4-8d71-11e3-94b5-425861b86ab6"
	}
    }                        
                    </pre>
                    
<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example5" aria-expanded="false" aria-controls="Node_Example5">
    node.js example
</button>   
<div class="collapse" id="Node_Example5">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

SellLimit('MC-BTC', 0.00001, 11350000, data => { console.log(JSON.stringify(data.result || data)); });

function SellLimit(market, quantity, rate, callback)
{
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/market/selllimit?apikey='+API_PUB_KEY+'&ampnonce='+nonce+'&ampmarket='+market+'&ampquantity='+quantity+'&amprate='+rate;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }
    };
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); });
    }).end();
    
}
                </pre>
        
    </div>
</div>
<br><br>
                    
                    <h5>/market/cancel</h5>
                    <p>Used to cancel a buy or sell order. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>uuid</code></td>
                            <td>required</td>
                            <td>uuid of buy or sell order</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/market/cancel?apikey=API_KEY&amp;nonce=NONCE&amp;uuid=ORDER_UUID </pre>
                    Response - Returns you the order uuid:
                    <pre>
    {
        "success" : true,
        "message" : "",
        "result" : null
    }
                    </pre>

<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example6" aria-expanded="false" aria-controls="Node_Example6">
    node.js example
</button>   
<div class="collapse" id="Node_Example6">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

CancelOrder("1530078445865-2-0.6676880290983116", data => { console.log(JSON.stringify(data.result || data)); });

function CancelOrder(uuid, callback)
{
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/market/cancel?apikey='+API_PUB_KEY+'&nonce='+nonce+'&uuid='+uuid;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }
    };
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); });
    }).end();
    
}
                </pre>
        
    </div>
</div>
<br><br>

                    <h5>/market/getopenorders</h5>
                    <p>Get all orders that you currently have opened. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>market</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ie. MC-LTC)</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/market/getopenorders?apikey=API_KEY&amp;nonce=NONCE&amp;market=MC-LTC  </pre>
                    Response - Returns you the order uuid:
                    <pre>
    {
	"success" : true,
	"message" : "",
	"result" : [{
			"OrderUuid" : "09aa5bb6-8232-41aa-9b78-a5a1093e0211",
			"Exchange" : "MC-LTC",
			"QuantityRemaining" : 5.00000000,
			"Price" : 2.00000000,
			"Opened" : "2018-01-01T03:55:48.77",
		}, {
			"OrderUuid" : "8925d746-bc9f-4684-b1aa-e507467aaa99",
			"Exchange" : "MC-LTC",
			"QuantityRemaining" : 100000.00000000,
			"Price" : 0.00000001,
			"Opened" : "2018-01-01T03:55:48.583",
		}
	]
    }
                        
                    </pre>

<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example7" aria-expanded="false" aria-controls="Node_Example7">
    node.js example
</button>   
<div class="collapse" id="Node_Example7">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

GetOpenOrders('MC-BTC', data => { console.log(JSON.stringify(data.result || data)); });

function GetOpenOrders(market, callback)
{
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/market/getopenorders?apikey='+API_PUB_KEY+'&ampnonce='+nonce+'&ampmarket='+market;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }
    };
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); });
    }).end();
};
                </pre>
        
    </div>
</div>
<br><br>
                    
                    
                </div>
                <br>
                <h4>Account Api</h4>
                <div class="api-doc">
                    <h5>/account/getbalance</h5>
                    <p>Used to retrieve the balance from your account for a specific currency. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>currency</code></td>
                            <td>required</td>
                            <td>a string literal for the currency (ex: BTC)</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/account/getbalance?apikey=API_KEY&amp;nonce=NONCE&amp;currency=BTC</pre>
                    Response:
                    <pre>
    {
	"success" : true,
	"message" : "",
	"result" : {
		"Currency" : "BTC",
		"Balance" : 4.21549076,
		"Available" : 4.21549076,
		"Pending" : 0.00000000
	}
    }                        
                    </pre>
                    
<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example2" aria-expanded="false" aria-controls="Node_Example2">
    node.js example
</button>   
<div class="collapse" id="Node_Example2">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

GetBalance('MC', data => { console.log(JSON.stringify(data.result || data)); });


function GetBalance(currency, callback)
{
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/account/getbalance?apikey='+API_PUB_KEY+'&ampnonce='+nonce+'&ampcurrency='+currency;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }
    };
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); });
    }).end();
};
                </pre>
        
    </div>
</div>

                    <br><br>
                    
                    
                    <h5>/account/getdepositaddress</h5>
                    <p>Used to retrieve or generate an address for a specific currency. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>currency</code></td>
                            <td>required</td>
                            <td>a string literal for the currency (ie. BTC)</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/account/getdepositaddress?apikey=API_KEY&amp;nonce=NONCE&amp;currency=LTC</pre>
                    Response:
                    <pre>
    {
    	"success" : true,
    	"message" : "",
    	"result" : {
    		"Currency" : "BTC",
    		"Address" : "1y5SKeKGXUHKS2WVpJ76HYuKAu3URastUo"
    	}
    }
                    </pre>
                
                    <h5>/account/getorder</h5>
                    <p>Used to retrieve a single order by uuid. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>uuid</code></td>
                            <td>required</td>
                            <td>the uuid of the buy or sell order</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/account/getorder?apikey=API_KEY&amp;nonce=NONCE&amp;uuid=ORDER_UUID</pre>
                    Response:
                    <pre>
    {
    	"success" : true,
    	"message" : "",
    	"result" : {
    		"OrderUuid" : "0cb4c4e4-bdc7-4e13-8c13-430e587d2cc1",
    		"Exchange" : "MC-BTC",
    		"QuantityRemaining" : 1000.00000000,
    		"Price" : 0.00000001,
    		"Opened" : "2018-01-01T07:45:46.27",
    		"IsOpen" : true
    	}
    }
                    </pre>

<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example8" aria-expanded="false" aria-controls="Node_Example8">
    node.js example
</button>   
<div class="collapse" id="Node_Example8">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

GetOrder("1530077938662-2-0.04123927384759796", data => { console.log(JSON.stringify(data.result || data)); });

function GetOrder(uuid, callback)
{
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/account/getorder?apikey='+API_PUB_KEY+'&ampnonce='+nonce+'&ampuuid='+uuid;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }
    };
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); });
    }).end();
    
}
                </pre>
        
    </div>
</div>
<br><br>

                    
                    <h5>/account/getorderhistory</h5>
                    <p>Used to retrieve your order history. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>market</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ie. MC-LTC).</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/account/getorderhistory?apikey=API_KEY&amp;nonce=NONCE&amp;market=MC-LTC</pre>
                    Response:
                    <pre>
    {
    	"success" : true,
    	"message" : "",
    	"result" : [{
    			"OrderUuid" : "fd97d393-e9b9-4dd1-9dbf-f288fc72a185",
    			"TimeStamp" : "2018-01-01T04:01:00.667",
    			"Price" : 0.00000001,
    			"QuantityRemaining" : 100000.00000000,
    		}, {
    			"OrderUuid" : "17fd64d1-f4bd-4fb6-adb9-42ec68b8697d",
    			"TimeStamp" : "2018-01-01T20:38:58.317",
    			"Price" : 0.00002950,
    			"QuantityRemaining" : 0.00000000,
    		}
    	]
    }
                    </pre>
                    
                    <h5>/account/withdraw</h5>
                    <p>Used to withdraw funds from your account. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>currency</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ie. MC-LTC).</td>
                        </tr>
                        <tr>
                            <td><code>quantity</code></td>
                            <td>required</td>
                            <td>the quantity of coins to withdraw</td>
                        </tr>
                        <tr>
                            <td><code>address</code></td>
                            <td>required</td>
                            <td>the address where to send the funds</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/account/withdraw?apikey=API_KEY&amp;nonce=NONCE&amp;currency=MC&amp;quantity=20.40&amp;address=MC_ADDRESS</pre>
                    Response:
                    <pre>
{
	"success" : true,
	"message" : "",
	"result" : {
			"uuid" : "68b5a16c-92de-11e3-ba3b-425861b86ab6"
	}
}
                    </pre>
                    

<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example3" aria-expanded="false" aria-controls="Node_Example3">
    node.js example
</button>   
<div class="collapse" id="Node_Example3">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

Withdraw('MC', 5, 'MVe3eoMq7TeGMzPw9EpXGpKQzW2aMvJNAa', data => { console.log(JSON.stringify(data.result || data)); });

function Withdraw(currency, quantity, address, callback) {
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/account/withdraw?apikey='+API_PUB_KEY+'&nonce='+nonce+'&currency='+currency+'&quantity='+quantity+'&address='+address;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }};
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); }); }).end();
}
                </pre>
        
    </div>
</div>

<br><br>

                    <h5>/account/createcoupon</h5>
                    <p>This method allows you to create Coupons. </p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>currency</code></td>
                            <td>required</td>
                            <td>a string literal for the market (ie. MC-LTC).</td>
                        </tr>
                        <tr>
                            <td><code>quantity</code></td>
                            <td>required</td>
                            <td>the quantity of coins to withdraw</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/account/createcoupon?apikey=API_KEY&amp;nonce=NONCE&amp;currency=MC&amp;quantity=20.40</pre>
                    Response:
                    <pre>
{
    "result": true, 
    "success":1,
    "return":{
        "coupon":"OT-2-1-0.01-1532875173145-f4f1b216f09507d6d987bhvgfbfc85ef36d0ba236e0983gslkjn196dafa9648",
        "funds":{"MC":430.4460447}
    }
}                    
                    </pre>
                    

<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example31" aria-expanded="false" aria-controls="Node_Example31">
    node.js example
</button>   
<div class="collapse" id="Node_Example31">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

Create('MC', 0.01, ret => {console.log(JSON.stringify(ret))});

function Create(currency, quantity, callback) {
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/account/createcoupon?apikey='+API_PUB_KEY+'&nonce='+nonce+'&currency='+currency+'&quantity='+quantity;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }};
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); });
    }).end();
}

                </pre>
        
    </div>
</div>

<br><br>

                    <h5>/account/redeemcoupon</h5>
                    <p>This method is used to redeem coupons.</p>
                    Parameters 
                    <table class='table'>
                        <tr>
                            <th>parameter</th>
                            <th>required</th>
                            <th>description</th>
                        </tr>
                        <tr>
                            <td><code>coupon</code></td>
                            <td>required</td>
                            <td>a string literal for coupon</td>
                        </tr>
                    </table>
                    Request: 
                    <pre>https://trade.multicoins.org/api/v1/account/redeemcoupon?apikey=API_KEY&amp;nonce=NONCE&amp;coupon=OT-2-1-0.01-1532875173145-f4f1b216f09507bsld587ygsek7fc88903tydfsjk36e7c8633196dafa9648</pre>
                    Response:
                    <pre>
{
    "result":true,
    "success":1,
    "return": {
        "couponAmount":"1",
        "couponCurrency":"MC",
        "funds":{"MC":431.9670079}
    }
}                    
                    </pre>
                    

<button class="btn btn-link" type="button" data-toggle="collapse" data-target="#Node_Example32" aria-expanded="false" aria-controls="Node_Example32">
    node.js example
</button>   
<div class="collapse" id="Node_Example32">
    <div class="card card-body">
                <pre>
'use strict';

const API_PUB_KEY = "__YOUR_API_PUBLIC_KEY__";
const API_PRIV_KEY = "__YOUR_API_PRIVATE_KEY__";

Close("OT-2-1-0.01-1532875173145-f4f1b216f09507bsld587ygsek7fc88903tydfsjk36e7c8633196dafa9648", ret => { console.log(JSON.stringify(ret));}

function Close(coupon, callback) {
    const nonce = Date.now()+Math.floor(Math.random() * (1000)) + 1;
    const uri = 'https://trade.multicoins.org/api/v1/account/redeemcoupon?apikey='+API_PUB_KEY+'&nonce='+nonce+'&coupon='+coupon;
    const parsed = require('url').parse(uri, true);
    const signature = require('crypto').createHmac('sha512', API_PRIV_KEY).update(new Buffer(uri, 'utf-8')).digest('hex');
    
    const options = {
        host: parsed.host,
        path: parsed.path,
        headers: { 'apisign': signature }};
    
    require("https").request(options, res => {
        let output = '';
        res.on('data', chunk => { output += chunk; });
        res.on('end', () => { return callback(JSON.parse(output)); });
    }).end();
}

                </pre>
        
    </div>
</div>
                    
                </div>
            </div>
        </div>
    </div> <!-- /container -->


    <%- include ../partials/footer %>
    <script src='/js/support.js'></script>
  </body>
</html>
